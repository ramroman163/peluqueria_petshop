/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.peluqueria_petshop.igu;

import com.mycompany.peluqueria_petshop.logica.ControladoraLogica;
import com.mycompany.peluqueria_petshop.logica.Mascota;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Roman
 */
public class VerDatos extends javax.swing.JFrame {

    ControladoraLogica control = null;

    /**
     * Creates new form VerDatos
     */
    public VerDatos() {
        control = new ControladoraLogica();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        panelAccion = new javax.swing.JPanel();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        panelTabla = new javax.swing.JScrollPane();
        tablaDatos = new javax.swing.JTable();
        title = new javax.swing.JLabel();
        separador = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panel.setBackground(new java.awt.Color(255, 255, 255));

        panelAccion.setBackground(new java.awt.Color(255, 204, 153));

        btnEditar.setText("EDITAR");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnEliminar.setText("ELIMINAR");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelAccionLayout = new javax.swing.GroupLayout(panelAccion);
        panelAccion.setLayout(panelAccionLayout);
        panelAccionLayout.setHorizontalGroup(
            panelAccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAccionLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(panelAccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        panelAccionLayout.setVerticalGroup(
            panelAccionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAccionLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(241, Short.MAX_VALUE))
        );

        panelTabla.setBackground(new java.awt.Color(204, 204, 204));

        tablaDatos.setAutoCreateRowSorter(true);
        tablaDatos.setBackground(new java.awt.Color(255, 255, 255));
        tablaDatos.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tablaDatos.setForeground(new java.awt.Color(0, 0, 0));
        tablaDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tablaDatos.setGridColor(new java.awt.Color(255, 255, 255));
        panelTabla.setViewportView(tablaDatos);

        title.setFont(new java.awt.Font("Roboto", 1, 48)); // NOI18N
        title.setForeground(new java.awt.Color(0, 0, 0));
        title.setText("Visualización de Datos");

        separador.setBackground(new java.awt.Color(255, 204, 153));
        separador.setForeground(new java.awt.Color(255, 204, 153));
        separador.setMinimumSize(new java.awt.Dimension(50, 20));
        separador.setPreferredSize(new java.awt.Dimension(50, 20));

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(separador, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(title)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addComponent(panelTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 563, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(panelAccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(separador, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelAccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52))
        );

        getContentPane().add(panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 650));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        if (tablaDatos.getRowCount() > 0 && tablaDatos.getSelectedRow() != -1) {
            // Obtenga el ID de la fila seleccionada
            int num_cliente = Integer.parseInt(String.valueOf(tablaDatos.getValueAt(tablaDatos.getSelectedRow(), 0)));
            
            ModificarDatos modificarDatos = new ModificarDatos(num_cliente);
            
            modificarDatos.setVisible(true);
            modificarDatos.setLocationRelativeTo(null);
            
            this.dispose();
            
        } else if(tablaDatos.getSelectedRow() == -1){
            mostrarMensaje("No se ha seleccionado ninguna mascota", "error", "Edición de mascota");
        } else if(tablaDatos.getRowCount() <= 0){
            mostrarMensaje("No hay ninguna mascota para editar", "error", "Edición de mascota");
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        cargarTabla();
    }//GEN-LAST:event_formWindowOpened

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if (tablaDatos.getRowCount() > 0 && tablaDatos.getSelectedRow() != -1) {
            // Obtenga el ID de la fila seleccionada
            int num_cliente = Integer.parseInt(String.valueOf(tablaDatos.getValueAt(tablaDatos.getSelectedRow(), 0)));
            control.borrarMascota(num_cliente);

            mostrarMensaje("Mascota eliminada correctamente", "info", "Borrado de mascota");
            
            cargarTabla();
        } else if(tablaDatos.getSelectedRow() == -1){
            mostrarMensaje("No se ha seleccionado ninguna mascota", "error", "Borrado de mascota");
        } else if(tablaDatos.getRowCount() <= 0){
            mostrarMensaje("No hay ninguna mascota para eliminar", "error", "Borrado de mascota");
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void mostrarMensaje(String msj, String tipo, String titulo){
        JOptionPane optionPane = new JOptionPane(msj);
        if(tipo.equals("info")){
            optionPane.setMessageType(JOptionPane.INFORMATION_MESSAGE);
        } else if(tipo.equals("error")){
            optionPane.setMessageType(JOptionPane.ERROR_MESSAGE);
        }
        JDialog dialog = optionPane.createDialog(titulo);
        dialog.setAlwaysOnTop(true);
        dialog.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JPanel panel;
    private javax.swing.JPanel panelAccion;
    private javax.swing.JScrollPane panelTabla;
    private javax.swing.JSeparator separador;
    private javax.swing.JTable tablaDatos;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables

    private void cargarTabla() {
        // Definicion del modelo de la tabla
        DefaultTableModel modeloTabla = new DefaultTableModel() {
            // Seteamos como no editables las filas y columnas
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        String titulos[] = {"Num", "Nombre", "Color", "Raza", "At. Especial", "Duenio", "Cel"};

        modeloTabla.setColumnIdentifiers(titulos);

        // Carga de datos
        List<Mascota> listaMascotas = control.traerMascotas();

        if (listaMascotas != null) {
            for (Mascota mascota : listaMascotas) {
                // Es un array con los datos de la mascota y dueño
                Object[] datosMascota = {
                    mascota.getNum_cliente(),
                    mascota.getNombre_mascota(),
                    mascota.getColor(),
                    mascota.getRaza(),
                    mascota.getAtencion_especial(),
                    mascota.getDuenio().getNombre(),
                    mascota.getDuenio().getCelDuenio()
                };

                modeloTabla.addRow(datosMascota);
            }
        }

        tablaDatos.setModel(modeloTabla);
    }
}
